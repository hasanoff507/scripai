{"version":3,"sources":["Modules/Assets/img/googlrIcon.png","Modules/Components/Container/index.tsx","Modules/Components/Nav/index.tsx","Modules/Components/TableComponent/index.tsx","Modules/Components/CenterTab/index.tsx","Modules/Components/RightTab/index.tsx","Modules/Components/Footer/index.tsx","Modules/Components/index.tsx","Modules/Home/index.tsx","Modules/AiTools/index.tsx","Modules/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","ContainerFull","_ref","children","React","CssBaseline","Container","maxWidth","style","Nav","createElement","className","Icon","iconSize","color","icon","href","Button","borderRadius","gap","paddingRight","display","alignItems","width","height","src","GoogleIcon","alt","TableComponent","valuesPost","text","content","split","filter","line","trim","map","index","key","CenterTab","loading","Spinner","size","onClick","copyToClipboard","navigator","clipboard","writeText","then","Toaster","create","position","Position","TOP","show","message","intent","Intent","SUCCESS","catch","err","console","error","boxShadow","backgroundColor","padding","refresh","window","location","reload","RightTab","Card","title","extra","background","border","Footer","justifyContent","marginTop","interactive","elevation","Elevation","TWO","Components","_saveData$fields","templates","templateTitle","categoryTitle","setLoading","useState","setValuesPost","useEffect","localStorage","setItem","saveData","setSaveData","getInitialSaveData","saved","getItem","JSON","parse","e","stringify","name","Form","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","localCategoryTitle","localTemplateTitle","requestOptions","method","headers","body","fetch","concat","response","json","data","onFinishFailed","errorInfo","log","autoComplete","fields","field","Fragment","Item","rules","required","Input","placeholder","type","htmlType","Home","Link","to","fontSize","flexDirection","AiTools","categories","setTemplateTitle","setCategoryTitle","category","categoryName","template","idx","handleSubmitLink","templateName","Modules","setCategories","setTemplates","storedTemplates","Router","Routes","item","Route","path","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4dfffd72.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/googlrIcon.b13c1140.png\";","import * as React from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\n\n// Define the props type if you need to accept other props besides children\ntype ContainerFullProps = {\n    children?: React.ReactNode;\n}\n\nconst ContainerFull: React.FC<ContainerFullProps> = ({ children }) => {\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <Container maxWidth=\"lg\" style={{maxWidth:\"unset\"}}>\n                {children} {/* Render the children here */}\n            </Container>\n        </React.Fragment>\n    );\n}\n\nexport default ContainerFull;\n","import React from \"react\";\nimport { Icon, Button } from \"@blueprintjs/core\";\nimport ContainerFull from \"../Container\";\nimport GoogleIcon from \"../../Assets/img/googlrIcon.png\";\n\ntype Props = {};\n\nconst Nav: React.FC<Props> = ({}) => {\n  return (\n    <header className=\"scrip_header\">\n      <ContainerFull>\n        <nav className=\"scrip__nav\">\n          <div className=\"scrip__title-scrip\">\n            <Icon iconSize={29} color=\"white\" icon=\"clean\" />\n            <a href=\"/\">\n              <h1>Text Ai</h1>\n              \n              </a>\n          </div>\n          <div className=\"scrip__title_right\">\n            <h3>All Tools</h3>\n            <Button\n              style={{\n                borderRadius: \"20px\",\n                gap: \"22px\",\n                paddingRight: \"20px\",\n              }}\n            >\n              {\" \"}\n              <div \n              className=\"font\"\n                style={{ display: \"flex\", alignItems: \"center\", gap: \"20px\" }}\n              >\n                <img\n                className=\"googleIcon\"\n                  style={{ width: \"24px\", height: \"23px\" }}\n                  src={GoogleIcon}\n                  alt=\"\"\n                />\n                Login with Google\n              </div>\n            </Button>\n          </div>\n        </nav>\n      </ContainerFull>\n    </header>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\n\n\n\ntype Props = {\n  valuesPost: any; // Consider defining a more specific type if possible\n};\n\nconst TableComponent: React.FC<Props> = ({  valuesPost = { text: '' } }: Props) => {\n  // Conditional rendering to check if valuesPost and valuesPost.text are defined\n  if (!valuesPost || !valuesPost.text) {\n    return <div>AI will write content here!</div>;\n  }\n\n  const content = valuesPost.text.split('\\n').filter((line: string) => line.trim() !== '');\n\n  return (\n    <div>\n      {content.map((line: string, index: number) => (\n        <p key={index}>{line}</p>\n      ))}\n    </div>\n  );\n};\n\nexport default TableComponent;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Icon,\n  Spinner,\n  Toaster,\n  Position,\n  Intent,\n} from \"@blueprintjs/core\";\nimport TableComponent from \"../TableComponent\";\n\n\n// Props expected by CenterTab component\ntype Props = {\n  loading: boolean;\n  valuesPost: any;\n};\n\nconst CenterTab: React.FC<Props> = ({ loading, valuesPost }) => {\n\n\n  // Function to handle refresh action\n  const refresh = () => {\n    window.location.reload();\n  };\n\n  // Function to copy post text to clipboard\n  const copyToClipboard = () => {\n    if (valuesPost && valuesPost.text) {\n      navigator.clipboard\n        .writeText(valuesPost.text)\n        .then(() => {\n          Toaster.create({ position: Position.TOP }).show({\n            message: \"Text copied to clipboard!\",\n            intent: Intent.SUCCESS,\n          });\n        })\n        .catch((err) => {\n          console.error(\"Failed to copy: \", err);\n        });\n    } else {\n      console.error(\"No text to copy\");\n    }\n  };\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      <div className=\"center__tab\">\n        <div className=\"center__title\">\n          {loading ? (\n            <Spinner size={50} />\n          ) : (\n            <TableComponent valuesPost={valuesPost}  />\n          )}\n        </div>\n      </div>\n      <div className=\"clear\">\n        <Button\n          onClick={copyToClipboard}\n          style={{\n            boxShadow: \"unset\",\n            backgroundColor: \"#374051\",\n            color: \"white\",\n            padding: \"11px 19px\",\n            borderRadius: \"20px\",\n          }}\n        >\n          Copy to Clipboard\n        </Button>\n        <Button\n          onClick={refresh}\n          style={{\n            boxShadow: \"unset\",\n            backgroundColor: \"#e11d48\",\n            padding: \"11px 19px\",\n            borderRadius: \"50%\",\n          }}\n        >\n          <Icon iconSize={20} color=\"white\" icon=\"refresh\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default CenterTab;\n","import React from \"react\";\nimport { Card } from \"antd\";\nimport { Icon } from \"@blueprintjs/core\";\n\ntype Props = {};\n\nconst RightTab: React.FC<Props> = ({}: Props) => {\n  return (\n    <div className=\"right__tab\">\n      <div className=\"card__tab\">\n        <Card\n          size=\"small\"\n          title={\n            <div className=\"right__tab_card\">\n              <Icon iconSize={20} color=\"black\" icon=\"clean\" />\n            </div>\n          }\n          extra={<p className=\"right__money\">$40</p>}\n          style={{\n            width: \"400px\",\n            background: \"#f0fdf3\",\n            border: \"1px solid #4ade80\",\n            maxWidth:'100%'\n          }}\n        >\n          <p>Money Saved</p>\n          <p>You have saved $40 by using scripAI over other AI tools!</p>\n        </Card>\n        <Card\n          size=\"small\"\n          title={\n            <div className=\"right__tab_card\">\n              <Icon iconSize={20} color=\"black\" icon=\"trending-up\" />\n            </div>\n          }\n          extra={<p className=\"right__money\">3508</p>}\n          style={{\n            width: \"400px\",\n            background: \"#fafaf9\",\n            border: \"1px solid #d6d3d1\",\n            maxWidth:'100%'\n\n          }}\n        >\n          <p>Number of Token:</p>\n          <p>Total number of words/token consumed by you.</p>\n        </Card>\n      </div>\n      <div className=\"list__tools\">\n        <div className=\"list__tools_text\">\n          <h6>LIST OF FREE AI TOOLS !</h6>\n          <span>(scroll to see more tools ↓)</span>\n          <div></div>\n        </div>\n        <div className=\"social__media\">\n          <div className=\"socialmedia__ai\">\n            <h6>Social Media AI</h6>\n            <span>(Live)</span>\n            <ul>\n              <li>\n                <a href=\"#\">Social Media Post</a>\n              </li>\n              <li>\n                <a href=\"#\">Social Media Post Ideas</a>\n              </li>\n              <li>\n                <a href=\"#\">Hashtag Generator</a>\n              </li>\n              <li>\n                <a href=\"#\">Short Video Script</a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"socialmedia__ai\">\n            <h6>Social Media AI</h6>\n            <span>(Live)</span>\n            <ul>\n              <li>\n                <a href=\"#\">Social Media Post</a>\n              </li>\n              <li>\n                <a href=\"#\">Social Media Post Ideas</a>\n              </li>\n              <li>\n                <a href=\"#\">Hashtag Generator</a>\n              </li>\n              <li>\n                <a href=\"#\">Short Video Script</a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"socialmedia__ai\">\n            <h6>Social Media AI</h6>\n            <span>(Live)</span>\n            <ul>\n              <li>\n                <a href=\"#\">Social Media Post</a>\n              </li>\n              <li>\n                <a href=\"#\">Social Media Post Ideas</a>\n              </li>\n              <li>\n                <a href=\"#\">Hashtag Generator</a>\n              </li>\n              <li>\n                <a href=\"#\">Short Video Script</a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"socialmedia__ai\">\n            <h6>Social Media AI</h6>\n            <span>(Live)</span>\n            <ul>\n              <li>\n                <a href=\"#\">Social Media Post</a>\n              </li>\n              <li>\n                <a href=\"#\">Social Media Post Ideas</a>\n              </li>\n              <li>\n                <a href=\"#\">Hashtag Generator</a>\n              </li>\n              <li>\n                <a href=\"#\">Short Video Script</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RightTab;\n","import React from \"react\";\nimport { Icon, Card, Elevation } from \"@blueprintjs/core\";\n\ntype Props = {};\n\nconst Footer: React.FC<Props> = ({}: Props) => {\n  \n\n  return (\n    <div className=\"footer__section\">\n      <div className=\"footer__section-display\"\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          gap: \"20px\",\n          marginTop: \"15px\",\n        }}\n      >\n        <Card\n          style={{\n            border: \"1px solid #000\",\n            borderRadius: \"20px\",\n            width: \"340px\",\n          }}\n          interactive={true}\n          elevation={Elevation.TWO}\n        >\n          <div className=\"footer__card\">\n            <Icon iconSize={20} color=\"black\" icon=\"clean\" />\n          </div>\n          <p className=\"footer__text\">Linkedln Post</p>\n          <span className=\"footer__span\">\n            Write LinkedIn post that make your LinkedIn conncetions stop\n            scrolling. Try AI LinkedIn  Post generator by Scrip AI and\n            watch your  LinkedIn post go viral!.\n          </span>\n        </Card>\n        <Card\n          style={{\n            border: \"1px solid #000\",\n            borderRadius: \"20px\",\n            width: \"340px\",\n          }}\n          interactive={true}\n          elevation={Elevation.TWO}\n        >\n          <div className=\"footer__card\">\n            <Icon iconSize={20} color=\"black\" icon=\"clean\" />\n          </div>\n          <p className=\"footer__text\">Linkedln Story Post</p>\n          <span className=\"footer__span\">\n            Write LinkedIn Story post that make your LinkedIn conncetion stop\n            scrolling. Try AI LinkedIn Story Post generator by Scrip AI and\n            watch your LinkedIn post go viral!.\n          </span>\n        </Card>\n        <Card\n          style={{\n            border: \"1px solid #000\",\n            borderRadius: \"20px\",\n            width: \"340px\",\n          }}\n          interactive={true}\n          elevation={Elevation.TWO}\n        >\n          <div className=\"footer__card\">\n            <Icon iconSize={20} color=\"black\" icon=\"clean\" />\n          </div>\n          <p className=\"footer__text\">Twitter Tweet</p>\n          <span className=\"footer__span\">\n            Generate Twitter Tweet that make your Twitter followers stop\n            scrolling. Try AI Twitter Tweet generator by Scrip AI and watch your\n            Twitter post go viral!.\n          </span>\n        </Card>\n        <Card\n          style={{\n            border: \"1px solid #000\",\n            borderRadius: \"20px\",\n            width: \"340px\",\n          }}\n          interactive={true}\n          elevation={Elevation.TWO}\n        >\n          <div className=\"footer__card\">\n            <Icon iconSize={20} color=\"black\" icon=\"clean\" />\n          </div>\n          <p className=\"footer__text\">Linkedin Hashtag</p>\n          <span className=\"footer__span\">\n            Generate Linkedin Hashtags that make Linkedin Algorithm Happy. Try\n            AI Linkedin Hashtag generator by Scrip AI and watch your Linkedin\n            post go viral!.\n          </span>\n        </Card>\n      </div>\n      <div className=\"about\">\n        <span>Privacy | T&C | GDPR | New </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect, useState } from \"react\";\nimport Nav from \"./Nav\";\nimport CenterTab from \"./CenterTab\";\nimport RightTab from \"./RightTab\";\nimport ContainerFull from \"./Container\";\nimport Footer from \"./Footer\";\nimport { Button, Form, Input } from \"antd\";\n\ntype FieldType = {\n  url: string;\n  company_name: string;\n  about: string;\n  location: string;\n  audience: string;\n};\n\ntype TemplatesType = {\n  categoryTitle: string;\n  title: string;\n  name: string;\n  fields: string[];\n};\n\n\ntype Props = {\n  templates: any;\n  templateTitle: any;\n  categoryTitle: any;\n};\n\nconst Components: React.FC<Props> = ({\n  templates,\n  templateTitle,\n  categoryTitle,\n}: Props) => {\n  //State for POST and GET\n\n  const [loading, setLoading] = useState(false);\n  const [valuesPost, setValuesPost] = useState();\n\n  //  LocalStorage from Titles\n  useEffect(() => {\n    if (templateTitle && categoryTitle) {\n      localStorage.setItem(\"templateTitle\", templateTitle);\n      localStorage.setItem(\"categoryTitle\", categoryTitle);\n    }\n  }, [templateTitle, categoryTitle]);\n\n  //LcocalStorage from Values\n\n  const getInitialSaveData = () => {\n    const saved = localStorage.getItem(\"saveData\");\n    if (saved) {\n      try {\n        const savedData = JSON.parse(saved);\n        return savedData;\n      } catch (e) {\n        console.error(\"Parsing error:\", e);\n        return templates;\n      }\n    }\n    return templates;\n  };\n\n  const [saveData, setSaveData] = useState<TemplatesType>(getInitialSaveData);\n\n  //LocalStorage SaveData\n\n  useEffect(() => {\n    localStorage.setItem(\"saveData\", JSON.stringify(saveData));\n  }, [saveData]);\n\n  // Render LcoalStorage\n\n  useEffect(() => {\n    setSaveData(templates);\n  }, [templates]);\n\n  //Post Request\n\n  const onFinish = (values: FieldType) => {\n    const localCategoryTitle = localStorage.getItem(\"categoryTitle\");\n    const localTemplateTitle = localStorage.getItem(\"templateTitle\");\n  \n    if (!localCategoryTitle || !localTemplateTitle) {\n      console.error(\"Category title or template title is missing\");\n      return; // Exit the function if titles are missing\n    }\n  \n    setLoading(true); // Set loading to true when the request starts\n  \n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(values),\n    };\n  \n    fetch(\n      `http://localhost:8095/generate/${localCategoryTitle}/${localTemplateTitle}`,\n      requestOptions\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setValuesPost(data);\n        setLoading(false); // Set loading to false when the request is complete\n      })\n      .catch((error) => {\n        console.error(\"Fetch error:\", error);\n        setLoading(false); // Set loading to false also in case of error\n      });\n  };\n\n  //Feiled Post Request\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log(errorInfo, \"error\");\n  };\n\n  return (\n    <div>\n      <Nav />\n      <ContainerFull>\n        <div className=\"container-fluid\">\n          <div className=\"paragraph__list\">\n            <div className=\"paragraph__title\">\n              <h2 className=\"savedata__title\">{saveData?.name}</h2>\n              <Form\n                name=\"basic\"\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 16 }}\n                style={{ maxWidth: 600 }}\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                autoComplete=\"off\"\n              >\n                {saveData?.fields?.map((field, index) => (\n                  <React.Fragment key={index}>\n                    <p>{field}</p>\n                    <Form.Item\n                      name={field}\n                      rules={[\n                        { required: true, message: `${field} is required` },\n                      ]}\n                    >\n                      <Input placeholder={`Please enter ${field}`} />\n                    </Form.Item>\n                  </React.Fragment>\n                ))}\n                <Form.Item>\n                  <Button\n                    style={{ width: \"100%\" }}\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Form.Item>\n              </Form>\n            </div>\n          </div>\n          <CenterTab valuesPost={valuesPost} loading={loading} />\n          <RightTab />\n        </div>\n      </ContainerFull>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Components;\n","import React from \"react\";\nimport { Icon, Button } from \"@blueprintjs/core\";\nimport ContainerFull from \"../Components/Container\";\nimport { Link } from \"react-router-dom\";\nimport GoogleIcon from \"../Assets/img/googlrIcon.png\";\ntype Props = {};\n\nconst Home: React.FC<Props> = ({}: Props) => {\n  return (\n    <div>\n      <div className=\"scrip_header\">\n        <ContainerFull>\n          <nav className=\"scrip__nav\">\n            <div className=\"scrip__title-scrip\">\n              <Icon iconSize={29} color=\"white\" icon=\"clean\" />\n              <h1>Scrip</h1>\n            </div>\n            <div className=\"scrip__title_right\">\n              <h3>All Tools</h3>\n              <Button\n                style={{\n                  borderRadius: \"20px\",\n                  gap: \"22px\",\n                  paddingRight: \"20px\",\n                }}\n              >\n                {\" \"}\n                <div className=\"font\" style={{display:'flex', alignItems:'center',gap:'20px'}}>\n                  <img\n                className=\"googleIcon\"\n                    style={{ width: \"24px\", height: \"23px\" }}\n                    src={GoogleIcon}\n                    alt=\"\"\n                  />\n                  Login with Google\n                </div>\n              </Button>\n            </div>\n          </nav>\n        </ContainerFull>\n      </div>\n      <div className=\"homepage__section\">\n        <ContainerFull>\n          <div className=\"homepage\">\n            <h1>\n              Save $60/m ScripAI is FREE <br /> write AI content{\" \"}\n            </h1>\n            <span>Paragraph</span>\n            <p>10X faster & free AI content tool!</p>\n          </div>\n          <Link to=\"/ai-tools\">\n            <Button\n              icon=\"arrow-right\"\n              style={{\n                fontSize: \"20px\",\n                padding: \"5px 45px\",\n                borderRadius: \"20px\",\n                flexDirection: \"row-reverse\",\n                gap: \"10px\",\n                background: \"#e11d48\",\n                color: \"white\",\n                boxShadow: \"unset\",\n              }}\n            >\n              Try for Free!\n            </Button>\n          </Link>\n        </ContainerFull>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, BrowserRouter as Router } from \"react-router-dom\";\nimport ContainerFull from \"../Components/Container\";\nimport Nav from \"../Components/Nav\";\n\ntype Template = {\n  templateTitle: string;\n  templateName: string;\n};\n\ntype Category = {\n  categoryTitle: string;\n  categoryName: string;\n  templates: Template[];\n};\n\ntype Props = {\n  categories: Category[];\n  setTemplateTitle: any;\n  setCategoryTitle: any;\n};\n\nconst AiTools: React.FC<Props> = ({\n  categories,\n  setTemplateTitle,\n  setCategoryTitle,\n}: Props) => {\n\n\n  useEffect(() => {\n    const hasReloaded = localStorage.getItem(\"hasReloaded\");\n\n    if (!hasReloaded) {\n      localStorage.setItem(\"hasReloaded\", \"true\");\n      window.location.reload();\n    }\n  }, []);\n\n  const handleSubmitLink = (categoryTitle: any, templateTitle: any) => {\n    setCategoryTitle(categoryTitle);\n    setTemplateTitle(templateTitle);\n  };\n\n  return (\n    <div>\n      <div>\n        <Nav />\n      </div>\n      <ContainerFull>\n        {categories.map((category: any, index: number) => (\n          <div key={index}>\n            <h3>{category.categoryName}</h3>\n            {category.templates.map((template: Template, idx: number) => (\n              <div key={idx}>\n                <Link\n                  to={`/${category.categoryTitle}/${template.templateTitle}`}\n                  onClick={() =>\n                    handleSubmitLink(\n                      category.categoryTitle,\n                      template.templateTitle\n                    )\n                  }\n                >\n                  {template.templateName}\n                </Link>\n              </div>\n            ))}\n          </div>\n        ))}\n      </ContainerFull>\n    </div>\n  );\n};\n\nexport default AiTools;\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport \"./Assets/css/style.css\";\nimport Components from \"./Components\";\nimport Home from \"./Home\";\nimport AiTools from \"./AiTools\";\nimport { Spinner } from \"@blueprintjs/core\";\n\ntype Template = {\n  templateTitle: string;\n  templateName: string;\n};\n\ntype Category = {\n  categoryTitle: string;\n  categoryName: string;\n  templates: Template[];\n};\n\nconst Modules: React.FC = () => {\n  const [categories, setCategories] = useState<Category[]>([]);\n  const [loading, setLoading] = useState(true); // Initialize loading state\n  const [templates, setTemplates] = useState();\n  const [templateTitle, setTemplateTitle] = useState();\n  const [categoryTitle, setCategoryTitle] = useState();\n\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8095/categories\")\n      .then((response) => response.json())\n      .then((json) => {\n        setCategories(json);\n        setLoading(false); // Set loading to false once categories are fetched\n      });\n  }, []);\n\n  useEffect(() => {\n    const storedTemplates = localStorage.getItem(\"templateData\");\n    if (storedTemplates) {\n      setTemplates(JSON.parse(storedTemplates));\n    }\n    setLoading(false);\n  }, []);\n\n  // Fetch templates data and save it to localStorage\n  useEffect(() => {\n    if (categoryTitle && templateTitle) {\n      // Ensure both values are set\n      fetch(`http://127.0.0.1:8095/templates/${categoryTitle}/${templateTitle}`)\n        .then((response) => response.json())\n        .then((json) => {\n          setTemplates(json);\n          localStorage.setItem(\"templateData\", JSON.stringify(json)); // Save to local storage\n        })\n        .catch((error) => {\n          console.error(\"Error fetching template data:\", error);\n          setLoading(false);\n        });\n    }\n  }, [categoryTitle, templateTitle]);\n\n  // console.log(templates);\n\n  return (\n    <Router>\n      <Routes>\n        {categories.map((item: any, index: number) => (\n          <React.Fragment key={index}>\n            <Route path=\"/\" element={<Home />} />\n            <Route\n              path=\"ai-tools\"\n              element={\n                <AiTools\n                  categories={categories}\n                  setTemplateTitle={setTemplateTitle}\n                  setCategoryTitle={setCategoryTitle}\n                />\n              }\n            />\n            <Route path={`${item.categoryTitle}`}>\n              {item.templates.map((template: any, idx: number) => (\n                <Route key={idx}>\n                  <Route\n                    path={`${template.templateTitle}`}\n                    element={\n                      <Components\n                        templates={templates}\n                        templateTitle={templateTitle}\n                        categoryTitle={categoryTitle}\n                      />\n                    }\n                  />\n                </Route>\n              ))}\n            </Route>\n          </React.Fragment>\n        ))}\n      </Routes>\n    </Router>\n  );\n};\n\nexport default Modules;\n","import React from 'react';\nimport Modules from './Modules';\nimport Generic from './Generic';\nfunction App() {\n  return (\n    <div>\n      <Modules/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@blueprintjs/core/lib/css/blueprint.css';\n\n\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}