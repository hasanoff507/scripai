{"version":3,"sources":["Modules/Components/Container/index.tsx","Modules/Components/Google/login.tsx","Modules/Components/Nav/index.tsx","Modules/Components/TableComponent/index.tsx","Modules/Components/CenterTab/index.tsx","Modules/Components/RightTab/index.tsx","Modules/Components/Footer/index.tsx","Modules/Components/index.tsx","Modules/Home/index.tsx","Modules/Components/AiTools/index.tsx","Modules/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ContainerFull","_ref","children","React","CssBaseline","Container","maxWidth","style","paddingLeft","paddingRight","clientId","LoginLogoutComponent","isLoggedIn","setIsLoggedIn","useState","profilePic","setProfilePic","createElement","className","id","display","alignItems","gap","GoogleLogout","buttonText","onLogoutSuccess","console","log","src","alt","GoogleLogin","onSuccess","res","profileObj","imageUrl","onFailure","error","cookiePolicy","scope","isSignedIn","borderRadius","Nav","useEffect","gapi","load","client","init","Icon","iconSize","color","icon","href","Login","TableComponent","valuesPost","text","content","split","filter","line","trim","map","index","key","CenterTab","loading","width","Spinner","size","Button","onClick","copyToClipboard","navigator","clipboard","writeText","then","Toaster","create","position","Position","TOP","show","message","intent","Intent","SUCCESS","catch","err","boxShadow","backgroundColor","padding","refresh","window","location","reload","RightTab","categories","setTemplateTitle","setCategoryTitle","category","categoryName","templates","template","idx","Link","reloadDocument","to","concat","categoryTitle","templateTitle","handleSubmitLink","templateName","Footer","justifyContent","marginTop","Components","_saveData$fields","setLoading","setValuesPost","localStorage","setItem","saveData","setSaveData","getInitialSaveData","saved","getItem","JSON","parse","e","stringify","name","Form","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","localCategoryTitle","localTemplateTitle","requestOptions","method","headers","body","fetch","response","json","data","onFinishFailed","errorInfo","autoComplete","fields","field","Fragment","textTransform","Item","rules","required","Input","placeholder","background","type","htmlType","Home","fontSize","flexDirection","AiTools","Card","title","border","Modules","setCategories","setTemplates","defaultCategories","finally","storedTemplates","Router","Routes","item","Route","path","element","App","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.1eed425d.chunk.js","sourcesContent":["import * as React from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\n\n// Define the props type if you need to accept other props besides children\ntype ContainerFullProps = {\n    children?: React.ReactNode;\n}\n\nconst ContainerFull: React.FC<ContainerFullProps> = ({ children }) => {\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <Container maxWidth=\"lg\" style={{maxWidth:\"unset\", paddingLeft:'20px !important', paddingRight:'20px !important'}}>\n                {children} {/* Render the children here */}\n            </Container>\n        </React.Fragment>\n    );\n}\n\nexport default ContainerFull;\n","import React, { useState } from \"react\";\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\n\nconst clientId =\n  \"954375066737-krhrae3rkpqu67iotu782jkn8bb0h1qv.apps.googleusercontent.com\";\n\nconst LoginLogoutComponent = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [profilePic, setProfilePic] = useState(\"\");\n\n  const onSuccessLogin = (res: any) => {\n    console.log(\"LOGIN SUCCESS! Current user: \", res.profileObj);\n    setProfilePic(res.profileObj.imageUrl);\n    setIsLoggedIn(true);\n  };\n\n  const onFailureLogin = (res: any) => {\n    console.error(\"LOGIN FAILED! res:\", res);\n  };\n\n  const onLogoutSuccess = () => {\n    console.log(\"LOGOUT SUCCESSFUL\");\n    setIsLoggedIn(false);\n    setProfilePic(\"\");\n  };\n\n  return (\n    <div className=\"signbutton\">\n      {isLoggedIn ? (\n        <div\n          id=\"signOutButton\"\n          style={{ display: \"flex\", alignItems: \"center\", gap: \"15px\" }}\n        >\n          <GoogleLogout\n            clientId={clientId}\n            buttonText=\"Logout\"\n            onLogoutSuccess={onLogoutSuccess}\n            className=\"googleLogIn\"\n\n          />\n          {profilePic && (\n            <img className=\"google__acc_image\" src={profilePic} alt=\"Profile\" />\n          )}\n        </div>\n      ) : (\n        <div\n          id=\"signInButton\"\n          style={{ display: \"flex\", alignItems: \"center\", gap: \"15px\" }}\n        >\n          <GoogleLogin\n            clientId={clientId}\n            buttonText=\"Login\"\n            onSuccess={onSuccessLogin}\n            onFailure={onFailureLogin}\n            cookiePolicy={\"single_host_origin\"}\n            scope=\"https://www.googleapis.com/auth/userinfo.profile\"\n            isSignedIn={true}\n            style={{ borderRadius: \"20px !important\" }}\n            className=\"googleLogIn\"\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LoginLogoutComponent;\n","import React,{useEffect} from \"react\";\nimport { Icon, Button } from \"@blueprintjs/core\";\nimport ContainerFull from \"../Container\";\nimport GoogleIcon from \"../../Assets/img/googlrIcon.png\";\nimport Login from \"../Google/login\";\nimport { gapi } from \"gapi-script\";\n\ntype Props = {};\nconst clientId =\n  \"954375066737-krhrae3rkpqu67iotu782jkn8bb0h1qv.apps.googleusercontent.com\";\n\nconst Nav: React.FC<Props> = ({}) => {\n\n  useEffect(()=>{\n    function start(){\n      gapi.client.init({\n        clientId: clientId,\n        scope: \"\"\n      })\n    }\n    gapi.load(\"client:auth2\",start);\n    },[])\n\n  return (\n    <header className=\"scrip_header\">\n      <ContainerFull>\n        <nav className=\"scrip__nav\">\n          <div className=\"scrip__title-scrip\">\n            <Icon iconSize={29} color=\"white\" icon=\"clean\" />\n            <a href=\"/\">\n              <h1>AI Text</h1>\n              \n              </a>\n          </div>\n          <div className=\"scrip__title_right\">\n            <a style={{color:'#fff'}} href=\"/ai-tools\">All Tools</a>\n            {/* <Button\n              style={{\n                borderRadius: \"20px\",\n                gap: \"22px\",\n                paddingRight: \"20px\",\n              }}\n            >\n              {\" \"}\n              <div \n              className=\"font\"\n                style={{ display: \"flex\", alignItems: \"center\", gap: \"20px\" }}\n              >\n                <img\n                className=\"googleIcon\"\n                  style={{ width: \"24px\", height: \"23px\" }}\n                  src={GoogleIcon}\n                  alt=\"\"\n                />\n                Login with Google\n              </div>\n            </Button> */}\n            <Login/>\n          </div>\n        </nav>\n      </ContainerFull>\n    </header>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\n\n\n\ntype Props = {\n  valuesPost: any; // Consider defining a more specific type if possible\n};\n\nconst TableComponent: React.FC<Props> = ({  valuesPost = { text: '' } }: Props) => {\n  // Conditional rendering to check if valuesPost and valuesPost.text are defined\n  if (!valuesPost || !valuesPost.text) {\n    return <div>AI will write content here!</div>;\n  }\n\n  const content = valuesPost.text.split('\\n').filter((line: string) => line.trim() !== '');\n\n  return (\n    <div>\n      {content.map((line: string, index: number) => (\n        <p key={index}>{line}</p>\n      ))}\n    </div>\n  );\n};\n\nexport default TableComponent;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Icon,\n  Spinner,\n  Toaster,\n  Position,\n  Intent,\n} from \"@blueprintjs/core\";\nimport TableComponent from \"../TableComponent\";\n\n\n// Props expected by CenterTab component\ntype Props = {\n  loading: boolean;\n  valuesPost: any;\n};\n\nconst CenterTab: React.FC<Props> = ({ loading, valuesPost }) => {\n\n\n  // Function to handle refresh action\n  const refresh = () => {\n    window.location.reload();\n  };\n\n  // Function to copy post text to clipboard\n  const copyToClipboard = () => {\n    if (valuesPost && valuesPost.text) {\n      navigator.clipboard\n        .writeText(valuesPost.text)\n        .then(() => {\n          Toaster.create({ position: Position.TOP }).show({\n            message: \"Text copied to clipboard!\",\n            intent: Intent.SUCCESS,\n          });\n        })\n        .catch((err) => {\n          console.error(\"Failed to copy: \", err);\n        });\n    } else {\n      console.error(\"No text to copy\");\n    }\n  };\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      <div className=\"center__tab\">\n        <div className=\"center__title\">\n          {loading ? (\n            <Spinner size={50} />\n          ) : (\n            <TableComponent valuesPost={valuesPost}  />\n          )}\n        </div>\n      </div>\n      <div className=\"clear\">\n        <Button\n          onClick={copyToClipboard}\n          style={{\n            boxShadow: \"unset\",\n            backgroundColor: \"#374051\",\n            color: \"white\",\n            padding: \"11px 19px\",\n            borderRadius: \"20px\",\n          }}\n        >\n          Copy to Clipboard\n        </Button>\n        <Button\n          onClick={refresh}\n          style={{\n            boxShadow: \"unset\",\n            backgroundColor: \"#73c2fb\",\n            padding: \"11px 19px\",\n            borderRadius: \"50%\",\n          }}\n        >\n          <Icon iconSize={20} color=\"white\" icon=\"refresh\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default CenterTab;\n","import React, { useEffect } from \"react\";\nimport { Link, BrowserRouter as Router } from \"react-router-dom\";\ntype Template = {\n  templateTitle: string;\n  templateName: string;\n};\n\ntype Category = {\n  categoryTitle: string;\n  categoryName: string;\n  templates: Template[];\n};\n\ntype Props = {\n  categories: Category[];\n  setTemplateTitle: any;\n  setCategoryTitle: any;\n};\n\nconst RightTab: React.FC<Props> = ({\n  categories,\n  setTemplateTitle,\n  setCategoryTitle,\n}: Props) => {\n  const handleSubmitLink = (categoryTitle: any, templateTitle: any) => {\n    setCategoryTitle(categoryTitle);\n    setTemplateTitle(templateTitle);\n    window.location.reload();\n  };\n\n  return (\n    <div className=\"right__tab\">\n      {categories.map((category: any, index: number) => (\n        <div key={index}>\n          <h3>{category.categoryName}</h3>\n          {category.templates.map((template: Template, idx: number) => (\n            <div key={idx}>\n              <Link\n                reloadDocument\n                to={`/${category.categoryTitle}/${template.templateTitle}`}\n                onClick={() =>\n                  handleSubmitLink(\n                    category.categoryTitle,\n                    template.templateTitle\n                  )\n                }\n              >\n                {template.templateName}\n              </Link>\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default RightTab;\n","import React from \"react\";\nimport { Icon, Card, Elevation } from \"@blueprintjs/core\";\n\ntype Props = {};\n\nconst Footer: React.FC<Props> = ({}: Props) => {\n  \n\n  return (\n    <div className=\"footer__section\">\n      <div className=\"footer__section-display\"\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          gap: \"20px\",\n          marginTop: \"15px\",\n        }}\n      >\n\n      </div>\n      <div className=\"about\">\n        <span>Privacy | T&C | GDPR | New </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect, useState } from \"react\";\nimport Nav from \"./Nav\";\nimport CenterTab from \"./CenterTab\";\nimport RightTab from \"./RightTab\";\nimport ContainerFull from \"./Container\";\nimport Footer from \"./Footer\";\nimport { Button, Form, Input } from \"antd\";\n\ntype FieldType = {\n  url: string;\n  company_name: string;\n  about: string;\n  location: string;\n  audience: string;\n};\n\ntype TemplatesType = {\n  categoryTitle: string;\n  title: string;\n  name: string;\n  fields: string[];\n};\ntype Template = {\n  templateTitle: string;\n  templateName: string;\n};\n\ntype Category = {\n  categoryTitle: string;\n  categoryName: string;\n  templates: Template[];\n};\n\ntype Props = {\n  templates: any;\n  templateTitle: any;\n  categoryTitle: any;\n  categories: Category[];\n  setTemplateTitle: any;\n  setCategoryTitle: any;\n};\n\nconst Components: React.FC<Props> = ({\n  templates,\n  templateTitle,\n  categoryTitle,\n  categories,\n  setTemplateTitle,\n  setCategoryTitle,\n}: Props) => {\n  //State for POST and GET\n\n  const [loading, setLoading] = useState(false);\n  const [valuesPost, setValuesPost] = useState();\n\n  //  LocalStorage from Titles\n  useEffect(() => {\n    if (templateTitle && categoryTitle) {\n      localStorage.setItem(\"templateTitle\", templateTitle);\n      localStorage.setItem(\"categoryTitle\", categoryTitle);\n    }\n  }, [templateTitle, categoryTitle]);\n\n  //LcocalStorage from Values\n\n  const getInitialSaveData = () => {\n    const saved = localStorage.getItem(\"saveData\");\n    if (saved) {\n      try {\n        const savedData = JSON.parse(saved);\n        return savedData;\n      } catch (e) {\n        console.error(\"Parsing error:\", e);\n        return templates;\n      }\n    }\n    return templates;\n  };\n\n  const [saveData, setSaveData] = useState<TemplatesType>(getInitialSaveData);\n\n  //LocalStorage SaveData\n\n  useEffect(() => {\n    localStorage.setItem(\"saveData\", JSON.stringify(saveData));\n  }, [saveData]);\n\n  // Render LcoalStorage\n\n  useEffect(() => {\n    setSaveData(templates);\n  }, [templates]);\n\n  //Post Request\n\n  const onFinish = (values: FieldType) => {\n    const localCategoryTitle = localStorage.getItem(\"categoryTitle\");\n    const localTemplateTitle = localStorage.getItem(\"templateTitle\");\n\n    if (!localCategoryTitle || !localTemplateTitle) {\n      console.error(\"Category title or template title is missing\");\n      return; // Exit the function if titles are missing\n    }\n\n    setLoading(true); // Set loading to true when the request starts\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(values),\n    };\n\n    fetch(\n      `http://localhost:8095/generate/${localCategoryTitle}/${localTemplateTitle}`,\n      requestOptions\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setValuesPost(data);\n        setLoading(false); // Set loading to false when the request is complete\n      })\n      .catch((error) => {\n        console.error(\"Fetch error:\", error);\n        setLoading(false); // Set loading to false also in case of error\n      });\n  };\n\n  //Feiled Post Request\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log(errorInfo, \"error\");\n  };\n\n  return (\n    <div>\n      <Nav />\n      <ContainerFull>\n        <div className=\"container-fluid\">\n          <div className=\"paragraph__list\">\n            <div className=\"paragraph__title\">\n              <h2 className=\"savedata__title\">{saveData?.name}</h2>\n              <Form\n                name=\"basic\"\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 16 }}\n                style={{ maxWidth: 600 }}\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                autoComplete=\"off\"\n              >\n                {saveData?.fields?.map((field, index) => (\n                  <React.Fragment key={index}>\n                    <p style={{textTransform:'capitalize'}}>{field}</p>\n                    <Form.Item\n                      name={field}\n                      rules={[\n                        { required: true, message: `${field} is required` },\n                      ]}\n                    >\n                      <Input placeholder={`Please enter ${field}`} />\n                    </Form.Item>\n                  </React.Fragment>\n                ))}\n                <Form.Item>\n                  <Button\n                    style={{ width: \"100%\" , color:'#fff',background:'#73c2fb'}}\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Form.Item>\n              </Form>\n            </div>\n          </div>\n          <CenterTab valuesPost={valuesPost} loading={loading} />\n          <RightTab\n            categories={categories}\n            setTemplateTitle={setTemplateTitle}\n            setCategoryTitle={setCategoryTitle}\n          />\n        </div>\n      </ContainerFull>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Components;\n","import React, { useEffect } from \"react\";\nimport { Icon, Button } from \"@blueprintjs/core\";\nimport ContainerFull from \"../Components/Container\";\nimport { Link } from \"react-router-dom\";\nimport GoogleIcon from \"../Assets/img/googlrIcon.png\";\nimport Login from \"../Components/Google/login\";\n\nimport Nav from \"../Components/Nav\";\n\ntype Props = {};\n\nconst Home: React.FC<Props> = ({}: Props) => {\n\n\n\n  return (\n    <div>\n      <div className=\"scrip_header\">\n        <Nav/>\n      </div>\n      <div className=\"homepage__section\">\n        <ContainerFull>\n          <div className=\"homepage\">\n            <h1>\n              Save $60/m AI Text is FREE <br /> write AI content{\" \"}\n            </h1>\n            <span>Paragraph</span>\n            <p>10X faster & free AI content tool!</p>\n          </div>\n          <Link to=\"/ai-tools\">\n            <Button\n              icon=\"arrow-right\"\n              style={{\n                fontSize: \"20px\",\n                padding: \"5px 45px\",\n                borderRadius: \"20px\",\n                flexDirection: \"row-reverse\",\n                gap: \"10px\",\n                background: \"#73c2fb\",\n                color: \"white\",\n                boxShadow: \"unset\",\n              }}\n            >\n              Try for Free!\n            </Button>\n          </Link>\n        </ContainerFull>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, BrowserRouter as Router } from \"react-router-dom\";\nimport ContainerFull from \"../Container\";\nimport Nav from \"../Nav\";\nimport { Card } from \"antd\";\nimport { Icon } from \"@blueprintjs/core\";\ntype Template = {\n  templateTitle: string;\n  templateName: string;\n};\n\ntype Category = {\n  categoryTitle: string;\n  categoryName: string;\n  templates: Template[];\n};\n\ntype Props = {\n  categories: Category[];\n  setTemplateTitle: any;\n  setCategoryTitle: any;\n};\n\nconst AiTools: React.FC<Props> = ({\n  categories,\n  setTemplateTitle,\n  setCategoryTitle,\n}: Props) => {\n  useEffect(() => {\n    const hasReloaded = localStorage.getItem(\"hasReloaded\");\n\n    if (!hasReloaded) {\n      localStorage.setItem(\"hasReloaded\", \"true\");\n      window.location.reload();\n    }\n  }, []);\n\n  const handleSubmitLink = (categoryTitle: any, templateTitle: any) => {\n    setCategoryTitle(categoryTitle);\n    setTemplateTitle(templateTitle);\n  };\n\n  return (\n    <div>\n      <div>\n        <Nav />\n      </div>\n      <ContainerFull>\n        <div className=\"card__option__item\">\n          {categories.map((category: any, index: number) => (\n            <div key={index}>\n              <h3>{category.categoryName}</h3>\n              <div className=\"aitools__display\">\n                {category.templates.map((template: Template, idx: number) => (\n                  <div key={idx}>\n                    <Link\n                      to={`/${category.categoryTitle}/${template.templateTitle}`}\n                      onClick={() =>\n                        handleSubmitLink(\n                          category.categoryTitle,\n                          template.templateTitle\n                        )\n                      }\n                    >\n                      <Card\n                        size=\"small\"\n                        title={\n                          <div className=\"right__tab_card\">\n                            <Icon iconSize={20} color=\"black\" icon=\"clean\" />\n                          </div>\n                        }\n                        style={{\n                          width: \"300px\",\n                          background: \"#f0fdf3\",\n                          border: \"1px solid #4ade80\",\n                          maxWidth: \"100%\",\n                        }}\n                      >\n                        <p>{category.categoryTitle}</p>\n                        <p>{template.templateName}</p>\n                      </Card>\n                    </Link>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      </ContainerFull>\n    </div>\n  );\n};\n\nexport default AiTools;\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport \"./Assets/css/style.css\";\nimport Components from \"./Components\";\nimport Home from \"./Home\";\nimport AiTools from \"./Components/AiTools\";\nimport { Spinner } from \"@blueprintjs/core\";\n\ntype Template = {\n  templateTitle: string;\n  templateName: string;\n};\n\ntype Category = {\n  categoryTitle: string;\n  categoryName: string;\n  templates: Template[];\n};\n\nconst Modules: React.FC = () => {\n  const [categories, setCategories] = useState<Category[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [templates, setTemplates] = useState();\n  const [templateTitle, setTemplateTitle] = useState();\n  const [categoryTitle, setCategoryTitle] = useState();\n\n  // Default categories to use as a fallback\n  const defaultCategories: Category[] = [\n    {\n      categoryTitle: \"Default Category 1\",\n      categoryName: \"default-category-1\",\n      templates: [\n        { templateTitle: \"Template 1\", templateName: \"template-1\" },\n        // ... more templates\n      ],\n    },\n    // ... more default categories\n  ];\n\n  useEffect(() => {\n    fetch(\"http://localhost:8095/categories\")\n      .then((response) => response.json())\n      .then((json) => {\n        setCategories(json);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching categories:\", error);\n        setCategories(defaultCategories); // Use default categories in case of an error\n      })\n      .finally(() => {\n        setLoading(false); // Set loading to false in both cases\n      });\n  }, []);\n\n  useEffect(() => {\n    const storedTemplates = localStorage.getItem(\"templateData\");\n    if (storedTemplates) {\n      setTemplates(JSON.parse(storedTemplates));\n    }\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    if (categoryTitle && templateTitle) {\n      fetch(`http://localhost:8095/templates/${categoryTitle}/${templateTitle}`)\n        .then((response) => response.json())\n        .then((json) => {\n          setTemplates(json);\n          localStorage.setItem(\"templateData\", JSON.stringify(json));\n        })\n        .catch((error) => {\n          console.error(\"Error fetching template data:\", error);\n          setLoading(false);\n        });\n    }\n  }, [categoryTitle, templateTitle]);\n\n  // Render logic\n  if (loading) {\n    return <Spinner />;\n  }\n\n  return (\n    <Router>\n      <Routes>\n        {categories.map((item: any, index: number) => (\n          <React.Fragment key={index}>\n            <Route path=\"/\" element={<Home />} />\n            <Route\n              path=\"ai-tools\"\n              element={\n                <AiTools\n                  categories={categories}\n                  setTemplateTitle={setTemplateTitle}\n                  setCategoryTitle={setCategoryTitle}\n                />\n              }\n            />\n            <Route path={`${item.categoryTitle}`}>\n              {item.templates.map((template: any, idx: number) => (\n                <Route key={idx}>\n                  <Route\n                    path={`${template.templateTitle}`}\n                    element={\n                      <Components\n                        categories={categories}\n                        setTemplateTitle={setTemplateTitle}\n                        setCategoryTitle={setCategoryTitle}\n                        templates={templates}\n                        templateTitle={templateTitle}\n                        categoryTitle={categoryTitle}\n                      />\n                    }\n                  />\n                </Route>\n              ))}\n            </Route>\n          </React.Fragment>\n        ))}\n      </Routes>\n    </Router>\n  );\n};\n\nexport default Modules;\n","import React from 'react';\nimport Modules from './Modules';\nimport Generic from './Generic';\nfunction App() {\n  return (\n    <div style={{height:'100vh'}}>\n      <Modules/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@blueprintjs/core/lib/css/blueprint.css';\n\n\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}